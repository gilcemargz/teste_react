{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onClicou","valor","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"yPAuBE,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAMG,UACrCH,EAAMI,O,IAMbC,E,2KAuBSC,GAAI,IAAD,OACd,OACM,kBAACP,EAAD,CACIK,MAAOG,KAAKP,MAAMQ,QAAQF,GAC1BH,SAAU,kBAAM,EAAKH,MAAME,QAAQI,Q,+BAc3C,OACA,6BACE,yBAAKL,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKR,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKR,UAAU,aACZM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GAxDTC,IAAMC,WA+DpBC,E,kDACJ,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IACDa,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPE,E,wDAWNZ,GAEV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,6BAIlBO,GACLjB,KAAKe,SAAS,CACZJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,+BAIlB,IAeJC,EAfG,OACDX,EAAUP,KAAKM,MAAMC,QAErBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAM,mBAC3C,OACE,wBAAIE,IAAKF,GACP,4BAAQ5B,QAAS,kBAAM,EAAK+B,OAAOH,KAAQC,OAYjD,OALEN,EADCE,EACQ,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACI,EAAD,CACEG,QAASkB,EAAQlB,QACjBN,QAAS,SAACI,GAAD,OAAO,EAAK4B,YAAY5B,OAGrC,yBAAKL,UAAU,aACb,6BAAMwB,GACN,4BAAKG,S,GArEIlB,IAAMC,WA4E3B,SAASU,EAAgBb,GAYrB,IAXA,IAAM2B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGF7B,EAAI,EAAGA,EAAI6B,EAAMf,OAAQd,IAAK,CAAC,IAAD,cACjB6B,EAAM7B,GADW,GAC5B8B,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GAClE,OAAO9B,EAAQ4B,GAGvB,OAAO,KAKTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.17c0821f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/*class Square extends React.Component {\r\n    /*constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n        }\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={() => this.props.onClicou()}>\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }*/\r\n\r\n  function Square(props){\r\n      return (\r\n          <button className=\"square\" onClick={props.onClicou}>\r\n              {props.valor}\r\n          </button>\r\n      )\r\n  }\r\n\r\n  \r\n  class Board extends React.Component {\r\n    /*constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        }\r\n    }*/\r\n    \r\n    /*handleClick(i) {\r\n        const squares = this.state.squares.slice()\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        \r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n        \r\n    }*/\r\n\r\n    renderSquare(i) {\r\n      return (\r\n            <Square \r\n                valor={this.props.squares[i]}\r\n                onClicou={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n  \r\n    render() {\r\n        /*const winner = calculateWinner(this.state.squares)\r\n        let status\r\n        if (winner) {\r\n            status = 'Winner:' + winner\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n        }*/\r\n  \r\n        return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n      }\r\n    }\r\n\r\n    handleClick(i) {\r\n      //const history = this.state.history;\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n          return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,\r\n      })\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      //const current = history[history.length - 1];\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n      \r\n      const moves = history.map((step, move) => {\r\n        const desc = move ? 'Go to move #' + move :'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        )\r\n      })\r\n      \r\n      let status;\r\n      if(winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n      \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7 ,8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}