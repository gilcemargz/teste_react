{"version":3,"sources":["index.js"],"names":["Calculadora","props","state","resultado","Number","valores","console","log","index","oper","length","alert","novo","atual","this","operacoes","resultadoTemporario","valor","setState","numero","element","proxCaractere","isNaN","push","String","calcula","onClick","e","acao","conteudo","botao","Component","ReactDOM","render","className","document","getElementById"],"mappings":"kMAIMA,G,wDAEF,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GAHG,E,oDAOVF,GACN,IAAIE,EAAYC,OAAOH,EAAMI,QAAQ,IACrCC,QAAQC,IAAIN,EAAMI,QAAQ,IAC1BC,QAAQC,IAAIN,EAAMI,QAAQ,IAE1B,IAAK,IAAIG,EAAQ,EAAGA,EAAQP,EAAMQ,KAAKC,OAAQF,IAAS,CAGtD,OAFgBP,EAAMQ,KAAKD,IAGzB,IAAK,IACHL,GAAaC,OAAOH,EAAMI,QAAQG,EAAQ,IAC1C,MAEF,IAAK,IACHL,GAAaC,OAAOH,EAAMI,QAAQG,EAAQ,IAC1C,MAEF,IAAK,IACHL,GAAaC,OAAOH,EAAMI,QAAQG,EAAQ,IAC1C,MAEF,IAAK,IACHL,GAAaC,OAAOH,EAAMI,QAAQG,EAAQ,IAC1C,MAEF,QACEG,MAAM,qCAKZ,OAAOR,I,2BAGJF,GACH,IACIW,EADAC,EAAQC,KAAKZ,MAAMC,UAEnBE,EAAU,GACVU,EAAY,GACZC,EAAsB,EAE1B,GAAmB,UAAhBf,EAAMgB,MAGP,OAFAL,EAAO,OACPE,KAAKI,SAAS,CAACf,UAAWS,IAI5B,GAAmB,MAAhBX,EAAMgB,MAAc,CAGrB,IAFA,IAAIE,EAEKX,EAAQ,EAAGA,EAAQK,EAAMH,OAAQF,IAAS,CACjD,IAAMY,EAAUP,EAAML,GAClBa,OAAa,EAEdb,EAAQK,EAAMH,OAAO,IACtBW,EAAgBR,EAAML,EAAM,IAIzBc,MAAMF,IAAwB,MAAZA,GAarBd,QAAQC,IAAI,cAAUa,GACtBL,EAAUQ,KAAKH,KAbfd,QAAQC,IAAI,uBAAsBa,GAClCD,EAASC,EACTJ,EAAsBQ,OAAOR,GAAuBQ,OAAOL,GAExDG,MAAMD,IACc,MAAlBA,IACDf,QAAQC,IAAI,UAAYS,GACxBX,EAAQkB,KAAKP,GACbA,EAAsB,IAS9BJ,EAAOE,KAAKW,QAAQ,CACEpB,QAASA,EACTI,KAAMM,SAK1BH,EADS,IAARC,EACMW,OAAOvB,EAAMgB,OAEbO,OAAOX,GAASW,OAAOvB,EAAMgB,OAIxCH,KAAKI,SAAS,CAACf,UAAWS,M,4BAItBX,GAAO,IAAD,OACV,OACE,wBAAQyB,QAAS,SAACC,GAAD,OAAO,EAAKC,KAAK,CAACX,MAAOhB,EAAM4B,YAAhD,SAA6D5B,EAAM4B,a,+BAKrE,OAAO,gCACG,8BACE,6BAAKf,KAAKZ,MAAMC,cAElB,gCACGW,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,SAEzB,gCACGf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,SAEzB,gCACGf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,SAEzB,gCACGf,KAAKgB,MAAM,CAACD,SAAU,MACtBf,KAAKgB,MAAM,CAACD,SAAU,IACtBf,KAAKgB,MAAM,CAACD,SAAU,MACtBf,KAAKgB,MAAM,CAACD,SAAU,MACtBf,KAAKgB,MAAM,CAACD,SAAU,oB,GAzIfE,cAmJ1BC,IAASC,OACP,qBAAKC,UAAU,cAAf,SACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.94e47a21.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css'\n\nclass Calculadora extends Component{\n\n    constructor(props){\n      super(props)\n      this.state = {\n        resultado: 0\n      }\n    }\n\n    calcula(props){\n      let resultado = Number(props.valores[0])\n      console.log(props.valores[0])\n      console.log(props.valores[1])\n\n      for (let index = 0; index < props.oper.length; index++) {\n        const element = props.oper[index];\n        \n        switch (element) {\n          case '+':\n            resultado += Number(props.valores[index + 1])\n            break;\n  \n          case '-':\n            resultado -= Number(props.valores[index + 1])\n            break;\n          \n          case '/':\n            resultado /= Number(props.valores[index + 1])\n            break;\n          \n          case '*':\n            resultado *= Number(props.valores[index + 1])\n            break;\n            \n          default:\n            alert('Operação não encontrada')\n            break;\n        } \n\n      }\n      return resultado\n    }\n\n    acao(props){\n      let atual = this.state.resultado\n      let novo\n      let valores = []\n      let operacoes = []\n      let resultadoTemporario = 0\n\n      if(props.valor === 'Zerar'){\n        novo = 0\n        this.setState({resultado: novo})\n        return\n      }\n\n      if(props.valor === '='){\n        let numero\n      \n        for (let index = 0; index < atual.length; index++) {\n          const element = atual[index];\n          let proxCaractere\n\n          if(index < atual.length-1){\n            proxCaractere = atual[index+1];\n          }\n\n          \n          if (!isNaN(element) || element === '.') {\n            console.log('É numero ou ponto' + element )\n            numero = element\n            resultadoTemporario = String(resultadoTemporario) + String(numero)\n\n            if(isNaN(proxCaractere)){\n              if(proxCaractere !== '.'){\n                console.log('Guardou' + resultadoTemporario )\n                valores.push(resultadoTemporario)\n                resultadoTemporario = 0\n              }\n            } \n          } else {\n            console.log('Não É' + element )\n            operacoes.push(element)\n          }\n        }\n\n        novo = this.calcula({\n                              valores: valores, \n                              oper: operacoes\n                            })\n\n      } else {\n        if(atual===0){\n          novo = String(props.valor)\n        }else {\n          novo = String(atual) + String(props.valor)\n        }\n      }\n      \n      this.setState({resultado: novo})\n      \n    }\n\n    botao(props){\n      return(\n        <button onClick={(e) => this.acao({valor: props.conteudo})}>{props.conteudo}</button>\n      )\n    }\n\n    render(){\n      return(<div>\n                <div>\n                  <h1>{this.state.resultado}</h1>\n                </div>  \n                <div>\n                  {this.botao({conteudo: 7})}\n                  {this.botao({conteudo: 8})}\n                  {this.botao({conteudo: 9})}\n                  {this.botao({conteudo: '/'})}      \n                </div>\n                <div>\n                  {this.botao({conteudo: 4})}\n                  {this.botao({conteudo: 5})}\n                  {this.botao({conteudo: 6})}\n                  {this.botao({conteudo: '*'})}      \n                </div>\n                <div>\n                  {this.botao({conteudo: 1})}\n                  {this.botao({conteudo: 2})}\n                  {this.botao({conteudo: 3})}\n                  {this.botao({conteudo: '-'})}      \n                </div>\n                <div>\n                  {this.botao({conteudo: '.'})}\n                  {this.botao({conteudo: 0})}\n                  {this.botao({conteudo: '='})}\n                  {this.botao({conteudo: '+'})}      \n                  {this.botao({conteudo: 'Zerar'})}      \n                </div>\n              </div>\n    ) \n    }\n}\n\n\n\n\nReactDOM.render(\n  <div className='calculadora'>\n    <Calculadora />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}